$NetBSD: INSTALL,v 1.10 2008/09/21 16:35:24 lukem Exp $

INSTALLATION INTRODUCTION
-------------------------

This file describes how to compile and install tnftpd on your system.

	============================================
	=					   =
	=  NOTE: You will need an ANSI C compiler. =
	=					   =
	============================================


For most systems, execute the following to compile and install tnftpd:
	./configure
	make
	make install

Preformatted manual pages for ftpd(8), ftpd.conf(5), and ftpusers(5) are
also installed.  If you wish to install the sources, ensure that your system
has up-to-date mandoc macros.  groff ships with this macro suite,
but it has bugs.  Try:
    ftp://ftp.NetBSD.org/pub/NetBSD/NetBSD-current/src/share/tmac/
for a more recent version.

Example configuration files are in the examples/ directory.


CONFIGURATION OPTIONS
---------------------

tnftpd is configured using an `autoconf' generated `configure' script.
`configure' supports the following options:

* The standard `autoconf configure' options, including:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [same as prefix]
  --srcdir=DIR            find the sources in DIR [configure dir or ..]
                          BSD or GNU make may be required for this to work.

* Specific options:

  --enable-ipv6           Enable IPv6 support (if your OS supports it).
  --disable-ipv6          Disable IPv6 support (even if your OS supports it).
                          [default: enabled]
  --enable-builtinls      Enable built-in /bin/ls.  [default: enabled]
  --disable-builtinls     Disable built-in /bin/ls.
  --with-pam              Enable support for Pluggable Authentication Modules.
  --with-skey             Enable support for S/Key authentication.
  --disable-largefile     Omit support for large files.

The following environment variables can be set to override various
compiler related settings.
  CC=compiler		specify name of the C compiler (default: gcc or cc)
  CFLAGS=flags		specify flags to C compiler (default: -O -g or just -O)
  LDFLAGS=flags		specify flags to linker (default: none)

This can be achieved with:
	env CC="compiler" CFLAGS="cflags" LDFLAGS="ldflags" ./configure


	============================================
	=					   =
	=  NOTE: You will need an ANSI C compiler. =
	=					   =
	============================================
