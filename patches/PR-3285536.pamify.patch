--- src/Makefile.in.orig	2006-12-11 15:38:37.000000000 -0800
+++ src/Makefile.in	2007-01-04 13:51:27.000000000 -0800
@@ -17,7 +17,7 @@
 
 CC	= @CC@
 CFLAGS	= -I${srcdir} -I${srcdir}/.. -I. -I.. @INCLUDES@ -DHAVE_TNFTPD_H=1 @CFLAGS@ -D_DEFAULT_CONFDIR=\"${sysconfdir}\"
-LIBS	= @LIBS@
+LIBS	= @LIBS@ -lpam
 LDFLAGS	= @LDFLAGS@
 
 INSTALL	= @INSTALL@
--- src/ftpd.c.orig	2006-12-11 15:17:43.000000000 -0800
+++ src/ftpd.c	2007-01-04 13:37:57.000000000 -0800
@@ -101,6 +101,11 @@
 #if HAVE_GETSPNAM
 #include <shadow.h>
 #endif
+#ifdef __APPLE__
+#include <pam/pam_appl.h>
+#include <pam/pam_misc.h>
+#include <pam/pam_mod_misc.h>
+#endif /* __APPLE__ */
 
 #else	/* ! HAVE_TNFTPD_H */
 
@@ -3705,6 +3710,31 @@
 	    rusage_after->ru_nswap - rusage_before->ru_nswap);
 }
 
+#ifdef __APPLE__
+char *mystuff = NULL;
+/* This is an extremely limited pam conversation module.
+ * It is the bare minimum to get the password.
+ */
+int aapl_conv(int num_msg, const struct pam_message **msg, struct pam_response **resp, void *appdata_ptr)
+{
+    struct pam_response *reply;
+
+    if( msg[0]->msg_style != PAM_PROMPT_ECHO_OFF )
+	return PAM_CONV_ERR;
+
+    reply = calloc(num_msg, sizeof(struct pam_response));
+    if( reply == NULL )
+	return PAM_BUF_ERR;
+
+    if( mystuff == NULL )
+	return PAM_CONV_ERR;
+
+    reply[0].resp = ftpd_strdup(mystuff);
+    *resp = reply;
+    return PAM_SUCCESS;
+}
+#endif /* __APPLE__ */
+
 /*
  * Determine if `password' is valid for user given in `pw'.
  * Returns 2 if password expired, 1 if otherwise failed, 0 if ok
@@ -3718,6 +3748,12 @@
 	struct spwd *spw;
 #endif
 
+#ifdef __APPLE__
+	pam_handle_t *pamh = NULL;
+	struct pam_conv conv = {aapl_conv, NULL};
+	int rval;
+#endif /* __APPLE__ */
+	
 	change = expire = 0;
 	if (pwent == NULL)
 		return 1;
@@ -3748,6 +3784,16 @@
 #endif
 #endif
 
+#ifdef __APPLE__
+	mystuff = password;
+	rval = pam_start("ftpd", pw->pw_name, &conv, &pamh);
+	if( rval != PAM_SUCCESS )
+	    return 1;
+	rval = pam_authenticate(pamh, 0);
+	if( rval != PAM_SUCCESS )
+	    return 1;
+#else
+
 	if (orig[0] == '\0')		/* don't allow empty passwords */
 		return 1;
 
@@ -3758,6 +3804,7 @@
 	if ((expire && now >= expire) || (change && now >= change))
 		return 2;		/* check if expired */
 
+#endif /* __APPLE__ */
 	return 0;			/* OK! */
 }
 
